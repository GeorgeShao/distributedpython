{"version": 3, "mappings": "AACA;;IACIA,gBAAgB,CAAC,CAAD,EAAG,CAAH;IAChBC,IAAE;IACF,OAAO,IAAP;QACIA,CAAAA,EAAAA,EAAG;QACHC,SAAS;QACT,aAAe,WAAE,gBAAA,CAAI,CAAAD,CAAA,EAAA,CAAE,CAAF,CAAJ,CAAA,EAAA,CAAS,CAAT,CAAjB,aAAA,QAAA;YACI,IAAG,CAAA,CAAAA,CAAA,EAAA,CAAEE,CAAF,CAAA,IAAA,CAAK,CAAL,CAAH;gBACID,SAAS;gBACT;YAFJ;QADJ;QAIA,IAAG,CAAAA,MAAA,IAAA,CAAQ,IAAR,CAAH;YACIF,aAAA,CAAkBA,aAAJI,OAAd,IAAoCH;QADxC;QAEA,IAAG,CAAID,aAAJI,OAAA,IAAA,CAAoBC,CAApB,CAAH;YACI;QADJ;IATJ;IAWAC,QAAA;IACA,OAAQ;AAfZ", "sources": ["transpile_temp.py"], "names": ["prime_numbers", "i", "status", "j", "prime_numbers.length", "n", "progress"], "sourcesContent": ["\ndef myfunction(n):\n    prime_numbers = [2,3]\n    i=3\n    while (True):\n        i+=1\n        status = True\n        for j in range(2,int(i/2)+1):\n            if(i%j==0):\n                status = False\n                break\n        if(status==True):\n            prime_numbers[len(prime_numbers)] = i\n        if(len(prime_numbers)==n):\n            break\n    progress()\n    return (f\"{n}th Prime Number is: {prime_numbers[n-1]}\")\n"]}